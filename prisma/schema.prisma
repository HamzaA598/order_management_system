// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId   Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  address  String?
  orders   Order[]
  cart     Cart?
}

model Product {
  productId   Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  orderItems  OrderItem[]
  cartItems   CartItem[]
}

model Order {
  orderId   Int      @id @default(autoincrement())
  userId    Int
  orderDate DateTime @default(now())
  status    String
  totalPrice Float @default(0)
  discountPercentage Float @default(0)
  user      User     @relation(fields: [userId], references: [userId])
  orderItems OrderItem[]
}

model OrderItem {
  orderId     Int
  productId   Int
  quantity    Int
  order       Order   @relation(fields: [orderId], references: [orderId])
  product     Product @relation(fields: [productId], references: [productId])
  @@id([orderId, productId])
}

model Cart {
  cartId    Int       @id @default(autoincrement())
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [userId])
  cartItems CartItem[]
}

model CartItem {
  cartId     Int
  productId  Int
  quantity   Int
  cart       Cart     @relation(fields: [cartId], references: [cartId])
  product    Product  @relation(fields: [productId], references: [productId])
  @@id([cartId, productId])
}
